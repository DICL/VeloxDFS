#!/bin/env ruby

require 'json'              #
require 'test/unit'         #

CONFPATH = "@sysconfdirfull@/eclipse.json"
BINDIR   = "@bindirfull@"

class Core < Test::Unit::TestCase
  def setup #{{{
    @nodelist = File.open(find_confpath) { |f| JSON.parse(f.read) }["nodes"]
  end
  #}}}
  # close {{{
  def teardown
    `pkill -u #{`whoami`.chomp} master`
    `pkill -u #{`whoami`.chomp} cacheserver`
    @nodelist.each do |node|
      `ssh #{node} pkill -u #{`whoami`.chomp} slave`
      `ssh #{node} pkill -u #{`whoami`.chomp} eclipse`
    end 
  end #}}}
  # find_confpath {{{
  def find_confpath
    home = "#{ENV['HOME']}/.eclipse.json"
    if File.exist? home
      return home
    else
      return CONFPATH
    end 
  end
  # }}}
    # launch {{{
    def launch
      `#{BINDIR}/master &>/dev/null &`
      `sleep 1`
      @nodelist.each do |node|
        system "ssh #{node} 'nohup #{BINDIR}/slave </dev/null &>/dev/null & exit'"
      end

      `#{BINDIR}/cacheserver &>/dev/null &`
      `sleep 1`
      @nodelist.each do |node|
        system "ssh #{node} 'nohup #{BINDIR}/eclipse </dev/null &>/dev/null & exit'"
      end
    end 

    #}}}
  def test_launch
    launch
    assert(system "pgrep -u vicente master")
    assert(system "pgrep -u vicente cacheserver")
    @nodelist.each do |node|
      assert(system "ssh #{node} pgrep -u #{`whoami`.chomp} slave")
      assert(system "ssh #{node} pgrep -u #{`whoami`.chomp} eclipse")
    end
  end
end
